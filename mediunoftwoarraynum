There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0

Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5


solution:
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        		int p=nums1.length,q=nums2.length;
		int result[]=new int[p+q];
	    int a=0,b=0,k=0;
		while(a<p&&b<q)
		{
			if(nums1[a]>nums2[b])
			{
				result[k]=nums2[b];
				k++;
				b=b+1;
			}
			else if(nums1[a]==nums2[b])
			{
				result[k]=nums1[a];
				result[k+1]=nums1[a];
				k=k+2;
				a++;b++;
			}
			else {
				result[k]=nums1[a];
				k++;
				a++;
			}
		}
		
		if(a==p)
		{
			while(b<q)
			{
              
				result[k]=nums2[b];
				  k++;b++;
			}
			
		}
		else 
		{
			while(a<p)
			{
               
				result[k]=nums1[a];
                 a++;k++;
				
			}
		}
		double  result1=0;
		if((p+q)%2==0)
		{
			 result1=(double)(result[(p+q)/2-1]+result[(p+q)/2])/2;
		}
		else {
			result1=result[(p+q+1)/2-1];
		}
		
		
		return result1;
		
		
		
	        
	    }
	 
	 
	 
    }
