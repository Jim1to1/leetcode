Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output:  321

Example 2:

Input: -123
Output: -321

Example 3:

Input: 120
Output: 21

Note:
Assume we are dealing with an environment which could only hold integers within the 32-bit signed integer range. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows. 



solution：
class Solution {
    public int reverse(int x) {
        
        int template=0,template2=0;
        int result=0;
        while(x!=0)
        {
        	
        	template=x%10;
        	x=x/10;
        	template2=result;
        	result=result*10+template;
        	if((result-template)/10!=template2)
        	{
        		return 0;
        	}
            //溢出了就会变这个数字。
        }
        
       
        
        return result;
        	 
        	 
        //此处判断溢出，不能简单判断有没有大于最大小于最小，因为都是Int类型的溢出了之后这个result值会表示其低的32位而不是原来的数组。
        //所以不管怎么样比较都不会是比其大或者比起小的
       
        	 
       
    }
}
